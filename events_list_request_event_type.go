// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

type EventsListRequestEventType uint8

const (
	EventsListRequestEventTypeDeviceConnected EventsListRequestEventType = iota + 1
	EventsListRequestEventTypeDeviceUnmanagedConnected
	EventsListRequestEventTypeDeviceDisconnected
	EventsListRequestEventTypeDeviceUnmanagedDisconnected
	EventsListRequestEventTypeDeviceConvertedToUnmanaged
	EventsListRequestEventTypeDeviceUnmanagedConvertedToManaged
	EventsListRequestEventTypeDeviceRemoved
	EventsListRequestEventTypeDeviceTampered
	EventsListRequestEventTypeDeviceLowBattery
	EventsListRequestEventTypeDeviceBatteryStatusChanged
	EventsListRequestEventTypeAccessCodeCreated
	EventsListRequestEventTypeAccessCodeChanged
	EventsListRequestEventTypeAccessCodeScheduledOnDevice
	EventsListRequestEventTypeAccessCodeSetOnDevice
	EventsListRequestEventTypeAccessCodeDeleted
	EventsListRequestEventTypeAccessCodeRemovedFromDevice
	EventsListRequestEventTypeAccessCodeFailedToSetOnDevice
	EventsListRequestEventTypeAccessCodeDelayInSettingOnDevice
	EventsListRequestEventTypeAccessCodeFailedToRemoveFromDevice
	EventsListRequestEventTypeAccessCodeDelayInRemovingFromDevice
	EventsListRequestEventTypeAccessCodeUnmanagedConvertedToManaged
	EventsListRequestEventTypeAccessCodeUnmanagedFailedToConvertToManaged
	EventsListRequestEventTypeAccessCodeUnmanagedCreated
	EventsListRequestEventTypeAccessCodeUnmanagedRemoved
	EventsListRequestEventTypeLockLocked
	EventsListRequestEventTypeLockUnlocked
	EventsListRequestEventTypeConnectedAccountConnected
	EventsListRequestEventTypeConnectedAccountCreated
	EventsListRequestEventTypeConnectedAccountDisconnected
	EventsListRequestEventTypeConnectedAccountCompletedFirstSync
	EventsListRequestEventTypeNoiseSensorNoiseThresholdTriggered
	EventsListRequestEventTypeAccessCodeBackupAccessCodePulled
)

func (e EventsListRequestEventType) String() string {
	switch e {
	default:
		return strconv.Itoa(int(e))
	case EventsListRequestEventTypeDeviceConnected:
		return "device.connected"
	case EventsListRequestEventTypeDeviceUnmanagedConnected:
		return "device.unmanaged.connected"
	case EventsListRequestEventTypeDeviceDisconnected:
		return "device.disconnected"
	case EventsListRequestEventTypeDeviceUnmanagedDisconnected:
		return "device.unmanaged.disconnected"
	case EventsListRequestEventTypeDeviceConvertedToUnmanaged:
		return "device.converted_to_unmanaged"
	case EventsListRequestEventTypeDeviceUnmanagedConvertedToManaged:
		return "device.unmanaged.converted_to_managed"
	case EventsListRequestEventTypeDeviceRemoved:
		return "device.removed"
	case EventsListRequestEventTypeDeviceTampered:
		return "device.tampered"
	case EventsListRequestEventTypeDeviceLowBattery:
		return "device.low_battery"
	case EventsListRequestEventTypeDeviceBatteryStatusChanged:
		return "device.battery_status_changed"
	case EventsListRequestEventTypeAccessCodeCreated:
		return "access_code.created"
	case EventsListRequestEventTypeAccessCodeChanged:
		return "access_code.changed"
	case EventsListRequestEventTypeAccessCodeScheduledOnDevice:
		return "access_code.scheduled_on_device"
	case EventsListRequestEventTypeAccessCodeSetOnDevice:
		return "access_code.set_on_device"
	case EventsListRequestEventTypeAccessCodeDeleted:
		return "access_code.deleted"
	case EventsListRequestEventTypeAccessCodeRemovedFromDevice:
		return "access_code.removed_from_device"
	case EventsListRequestEventTypeAccessCodeFailedToSetOnDevice:
		return "access_code.failed_to_set_on_device"
	case EventsListRequestEventTypeAccessCodeDelayInSettingOnDevice:
		return "access_code.delay_in_setting_on_device"
	case EventsListRequestEventTypeAccessCodeFailedToRemoveFromDevice:
		return "access_code.failed_to_remove_from_device"
	case EventsListRequestEventTypeAccessCodeDelayInRemovingFromDevice:
		return "access_code.delay_in_removing_from_device"
	case EventsListRequestEventTypeAccessCodeUnmanagedConvertedToManaged:
		return "access_code.unmanaged.converted_to_managed"
	case EventsListRequestEventTypeAccessCodeUnmanagedFailedToConvertToManaged:
		return "access_code.unmanaged.failed_to_convert_to_managed"
	case EventsListRequestEventTypeAccessCodeUnmanagedCreated:
		return "access_code.unmanaged.created"
	case EventsListRequestEventTypeAccessCodeUnmanagedRemoved:
		return "access_code.unmanaged.removed"
	case EventsListRequestEventTypeLockLocked:
		return "lock.locked"
	case EventsListRequestEventTypeLockUnlocked:
		return "lock.unlocked"
	case EventsListRequestEventTypeConnectedAccountConnected:
		return "connected_account.connected"
	case EventsListRequestEventTypeConnectedAccountCreated:
		return "connected_account.created"
	case EventsListRequestEventTypeConnectedAccountDisconnected:
		return "connected_account.disconnected"
	case EventsListRequestEventTypeConnectedAccountCompletedFirstSync:
		return "connected_account.completed_first_sync"
	case EventsListRequestEventTypeNoiseSensorNoiseThresholdTriggered:
		return "noise_sensor.noise_threshold_triggered"
	case EventsListRequestEventTypeAccessCodeBackupAccessCodePulled:
		return "access_code.backup_access_code_pulled"
	}
}

func (e EventsListRequestEventType) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", e.String())), nil
}

func (e *EventsListRequestEventType) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "device.connected":
		value := EventsListRequestEventTypeDeviceConnected
		*e = value
	case "device.unmanaged.connected":
		value := EventsListRequestEventTypeDeviceUnmanagedConnected
		*e = value
	case "device.disconnected":
		value := EventsListRequestEventTypeDeviceDisconnected
		*e = value
	case "device.unmanaged.disconnected":
		value := EventsListRequestEventTypeDeviceUnmanagedDisconnected
		*e = value
	case "device.converted_to_unmanaged":
		value := EventsListRequestEventTypeDeviceConvertedToUnmanaged
		*e = value
	case "device.unmanaged.converted_to_managed":
		value := EventsListRequestEventTypeDeviceUnmanagedConvertedToManaged
		*e = value
	case "device.removed":
		value := EventsListRequestEventTypeDeviceRemoved
		*e = value
	case "device.tampered":
		value := EventsListRequestEventTypeDeviceTampered
		*e = value
	case "device.low_battery":
		value := EventsListRequestEventTypeDeviceLowBattery
		*e = value
	case "device.battery_status_changed":
		value := EventsListRequestEventTypeDeviceBatteryStatusChanged
		*e = value
	case "access_code.created":
		value := EventsListRequestEventTypeAccessCodeCreated
		*e = value
	case "access_code.changed":
		value := EventsListRequestEventTypeAccessCodeChanged
		*e = value
	case "access_code.scheduled_on_device":
		value := EventsListRequestEventTypeAccessCodeScheduledOnDevice
		*e = value
	case "access_code.set_on_device":
		value := EventsListRequestEventTypeAccessCodeSetOnDevice
		*e = value
	case "access_code.deleted":
		value := EventsListRequestEventTypeAccessCodeDeleted
		*e = value
	case "access_code.removed_from_device":
		value := EventsListRequestEventTypeAccessCodeRemovedFromDevice
		*e = value
	case "access_code.failed_to_set_on_device":
		value := EventsListRequestEventTypeAccessCodeFailedToSetOnDevice
		*e = value
	case "access_code.delay_in_setting_on_device":
		value := EventsListRequestEventTypeAccessCodeDelayInSettingOnDevice
		*e = value
	case "access_code.failed_to_remove_from_device":
		value := EventsListRequestEventTypeAccessCodeFailedToRemoveFromDevice
		*e = value
	case "access_code.delay_in_removing_from_device":
		value := EventsListRequestEventTypeAccessCodeDelayInRemovingFromDevice
		*e = value
	case "access_code.unmanaged.converted_to_managed":
		value := EventsListRequestEventTypeAccessCodeUnmanagedConvertedToManaged
		*e = value
	case "access_code.unmanaged.failed_to_convert_to_managed":
		value := EventsListRequestEventTypeAccessCodeUnmanagedFailedToConvertToManaged
		*e = value
	case "access_code.unmanaged.created":
		value := EventsListRequestEventTypeAccessCodeUnmanagedCreated
		*e = value
	case "access_code.unmanaged.removed":
		value := EventsListRequestEventTypeAccessCodeUnmanagedRemoved
		*e = value
	case "lock.locked":
		value := EventsListRequestEventTypeLockLocked
		*e = value
	case "lock.unlocked":
		value := EventsListRequestEventTypeLockUnlocked
		*e = value
	case "connected_account.connected":
		value := EventsListRequestEventTypeConnectedAccountConnected
		*e = value
	case "connected_account.created":
		value := EventsListRequestEventTypeConnectedAccountCreated
		*e = value
	case "connected_account.disconnected":
		value := EventsListRequestEventTypeConnectedAccountDisconnected
		*e = value
	case "connected_account.completed_first_sync":
		value := EventsListRequestEventTypeConnectedAccountCompletedFirstSync
		*e = value
	case "noise_sensor.noise_threshold_triggered":
		value := EventsListRequestEventTypeNoiseSensorNoiseThresholdTriggered
		*e = value
	case "access_code.backup_access_code_pulled":
		value := EventsListRequestEventTypeAccessCodeBackupAccessCodePulled
		*e = value
	}
	return nil
}
