// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
)

type ThermostatsListRequestDeviceTypesItem struct {
	typeName                                                                   string
	ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem
	ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem
	ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem
}

func NewThermostatsListRequestDeviceTypesItemFromThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem(value ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem) *ThermostatsListRequestDeviceTypesItem {
	return &ThermostatsListRequestDeviceTypesItem{typeName: "thermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem", ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem: value}
}

func NewThermostatsListRequestDeviceTypesItemFromThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem(value ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem) *ThermostatsListRequestDeviceTypesItem {
	return &ThermostatsListRequestDeviceTypesItem{typeName: "thermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem", ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem: value}
}

func NewThermostatsListRequestDeviceTypesItemFromThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem(value ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem) *ThermostatsListRequestDeviceTypesItem {
	return &ThermostatsListRequestDeviceTypesItem{typeName: "thermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem", ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem: value}
}

func (t *ThermostatsListRequestDeviceTypesItem) UnmarshalJSON(data []byte) error {
	var valueThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem
	if err := json.Unmarshal(data, &valueThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem); err == nil {
		t.typeName = "thermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem"
		t.ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem = valueThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem
		return nil
	}
	var valueThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem
	if err := json.Unmarshal(data, &valueThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem); err == nil {
		t.typeName = "thermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem"
		t.ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem = valueThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem
		return nil
	}
	var valueThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem
	if err := json.Unmarshal(data, &valueThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem); err == nil {
		t.typeName = "thermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem"
		t.ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem = valueThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, t)
}

func (t ThermostatsListRequestDeviceTypesItem) MarshalJSON() ([]byte, error) {
	switch t.typeName {
	default:
		return nil, fmt.Errorf("invalid type %s in %T", t.typeName, t)
	case "thermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem":
		return json.Marshal(t.ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem)
	case "thermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem":
		return json.Marshal(t.ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem)
	case "thermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem":
		return json.Marshal(t.ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem)
	}
}

type ThermostatsListRequestDeviceTypesItemVisitor interface {
	VisitThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem(ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem) error
	VisitThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem(ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem) error
	VisitThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem(ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem) error
}

func (t *ThermostatsListRequestDeviceTypesItem) Accept(v ThermostatsListRequestDeviceTypesItemVisitor) error {
	switch t.typeName {
	default:
		return fmt.Errorf("invalid type %s in %T", t.typeName, t)
	case "thermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem":
		return v.VisitThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem(t.ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem)
	case "thermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem":
		return v.VisitThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem(t.ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem)
	case "thermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem":
		return v.VisitThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem(t.ThermostatsListRequestDeviceTypesItemThermostatsListRequestDeviceTypesItem)
	}
}
