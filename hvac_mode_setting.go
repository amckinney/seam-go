// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

type HvacModeSetting uint8

const (
	HvacModeSettingOff HvacModeSetting = iota + 1
	HvacModeSettingHeat
	HvacModeSettingCool
	HvacModeSettingHeatcool
)

func (h HvacModeSetting) String() string {
	switch h {
	default:
		return strconv.Itoa(int(h))
	case HvacModeSettingOff:
		return "off"
	case HvacModeSettingHeat:
		return "heat"
	case HvacModeSettingCool:
		return "cool"
	case HvacModeSettingHeatcool:
		return "heatcool"
	}
}

func (h HvacModeSetting) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", h.String())), nil
}

func (h *HvacModeSetting) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "off":
		value := HvacModeSettingOff
		*h = value
	case "heat":
		value := HvacModeSettingHeat
		*h = value
	case "cool":
		value := HvacModeSettingCool
		*h = value
	case "heatcool":
		value := HvacModeSettingHeatcool
		*h = value
	}
	return nil
}
