// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

type SupportedCapabililty uint8

const (
	SupportedCapabililtyAccessCode SupportedCapabililty = iota + 1
	SupportedCapabililtyLock
	SupportedCapabililtyNoiseDetection
	SupportedCapabililtyThermostat
	SupportedCapabililtyBattery
)

func (s SupportedCapabililty) String() string {
	switch s {
	default:
		return strconv.Itoa(int(s))
	case SupportedCapabililtyAccessCode:
		return "access_code"
	case SupportedCapabililtyLock:
		return "lock"
	case SupportedCapabililtyNoiseDetection:
		return "noise_detection"
	case SupportedCapabililtyThermostat:
		return "thermostat"
	case SupportedCapabililtyBattery:
		return "battery"
	}
}

func (s SupportedCapabililty) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", s.String())), nil
}

func (s *SupportedCapabililty) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "access_code":
		value := SupportedCapabililtyAccessCode
		*s = value
	case "lock":
		value := SupportedCapabililtyLock
		*s = value
	case "noise_detection":
		value := SupportedCapabililtyNoiseDetection
		*s = value
	case "thermostat":
		value := SupportedCapabililtyThermostat
		*s = value
	case "battery":
		value := SupportedCapabililtyBattery
		*s = value
	}
	return nil
}
