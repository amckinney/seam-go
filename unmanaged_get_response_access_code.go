// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	time "time"
)

type UnmanagedGetResponseAccessCode struct {
	Type         UnmanagedGetResponseAccessCodeType `json:"type,omitempty"`
	AccessCodeId string                             `json:"access_code_id"`
	DeviceId     string                             `json:"device_id"`
	Name         *string                            `json:"name,omitempty"`
	Code         *string                            `json:"code,omitempty"`
	CreatedAt    time.Time                          `json:"created_at"`
	Errors       *any                               `json:"errors,omitempty"`
	Warnings     *any                               `json:"warnings,omitempty"`
	IsManaged    string                             `json:"is_managed"`
	StartsAt     *time.Time                         `json:"starts_at,omitempty"`
	EndsAt       *time.Time                         `json:"ends_at,omitempty"`
	status       string
}

func (u *UnmanagedGetResponseAccessCode) Status() string {
	return u.status
}

func (u *UnmanagedGetResponseAccessCode) UnmarshalJSON(data []byte) error {
	type unmarshaler UnmanagedGetResponseAccessCode
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UnmanagedGetResponseAccessCode(value)
	u.status = "set"
	return nil
}

func (u *UnmanagedGetResponseAccessCode) MarshalJSON() ([]byte, error) {
	type embed UnmanagedGetResponseAccessCode
	var marshaler = struct {
		embed
		Status string `json:"status"`
	}{
		embed:  embed(*u),
		Status: "set",
	}
	return json.Marshal(marshaler)
}
