// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
)

type ConnectedAccountsGetRequest struct {
	typeName                                               string
	ConnectedAccountsGetRequestConnectedAccountsGetRequest *ConnectedAccountsGetRequestConnectedAccountsGetRequest
	ConnectedAccountsGetRequestConnectedAccountsGetRequest *ConnectedAccountsGetRequestConnectedAccountsGetRequest
}

func NewConnectedAccountsGetRequestFromConnectedAccountsGetRequestConnectedAccountsGetRequest(value *ConnectedAccountsGetRequestConnectedAccountsGetRequest) *ConnectedAccountsGetRequest {
	return &ConnectedAccountsGetRequest{typeName: "connectedAccountsGetRequestConnectedAccountsGetRequest", ConnectedAccountsGetRequestConnectedAccountsGetRequest: value}
}

func NewConnectedAccountsGetRequestFromConnectedAccountsGetRequestConnectedAccountsGetRequest(value *ConnectedAccountsGetRequestConnectedAccountsGetRequest) *ConnectedAccountsGetRequest {
	return &ConnectedAccountsGetRequest{typeName: "connectedAccountsGetRequestConnectedAccountsGetRequest", ConnectedAccountsGetRequestConnectedAccountsGetRequest: value}
}

func (c *ConnectedAccountsGetRequest) UnmarshalJSON(data []byte) error {
	valueConnectedAccountsGetRequestConnectedAccountsGetRequest := new(ConnectedAccountsGetRequestConnectedAccountsGetRequest)
	if err := json.Unmarshal(data, &valueConnectedAccountsGetRequestConnectedAccountsGetRequest); err == nil {
		c.typeName = "connectedAccountsGetRequestConnectedAccountsGetRequest"
		c.ConnectedAccountsGetRequestConnectedAccountsGetRequest = valueConnectedAccountsGetRequestConnectedAccountsGetRequest
		return nil
	}
	valueConnectedAccountsGetRequestConnectedAccountsGetRequest := new(ConnectedAccountsGetRequestConnectedAccountsGetRequest)
	if err := json.Unmarshal(data, &valueConnectedAccountsGetRequestConnectedAccountsGetRequest); err == nil {
		c.typeName = "connectedAccountsGetRequestConnectedAccountsGetRequest"
		c.ConnectedAccountsGetRequestConnectedAccountsGetRequest = valueConnectedAccountsGetRequestConnectedAccountsGetRequest
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, c)
}

func (c ConnectedAccountsGetRequest) MarshalJSON() ([]byte, error) {
	switch c.typeName {
	default:
		return nil, fmt.Errorf("invalid type %s in %T", c.typeName, c)
	case "connectedAccountsGetRequestConnectedAccountsGetRequest":
		return json.Marshal(c.ConnectedAccountsGetRequestConnectedAccountsGetRequest)
	case "connectedAccountsGetRequestConnectedAccountsGetRequest":
		return json.Marshal(c.ConnectedAccountsGetRequestConnectedAccountsGetRequest)
	}
}

type ConnectedAccountsGetRequestVisitor interface {
	VisitConnectedAccountsGetRequestConnectedAccountsGetRequest(*ConnectedAccountsGetRequestConnectedAccountsGetRequest) error
	VisitConnectedAccountsGetRequestConnectedAccountsGetRequest(*ConnectedAccountsGetRequestConnectedAccountsGetRequest) error
}

func (c *ConnectedAccountsGetRequest) Accept(v ConnectedAccountsGetRequestVisitor) error {
	switch c.typeName {
	default:
		return fmt.Errorf("invalid type %s in %T", c.typeName, c)
	case "connectedAccountsGetRequestConnectedAccountsGetRequest":
		return v.VisitConnectedAccountsGetRequestConnectedAccountsGetRequest(c.ConnectedAccountsGetRequestConnectedAccountsGetRequest)
	case "connectedAccountsGetRequestConnectedAccountsGetRequest":
		return v.VisitConnectedAccountsGetRequestConnectedAccountsGetRequest(c.ConnectedAccountsGetRequestConnectedAccountsGetRequest)
	}
}
