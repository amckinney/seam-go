// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

type Manufacturer uint8

const (
	ManufacturerAkuvox Manufacturer = iota + 1
	ManufacturerAugust
	ManufacturerBrivo
	ManufacturerButterflymx
	ManufacturerDoorking
	ManufacturerGenie
	ManufacturerIgloo
	ManufacturerKeywe
	ManufacturerKwikset
	ManufacturerLinear
	ManufacturerLockly
	ManufacturerNuki
	ManufacturerPhilia
	ManufacturerSalto
	ManufacturerSamsung
	ManufacturerSchlage
	ManufacturerSeam
	ManufacturerUnknown
	ManufacturerYale
	ManufacturerMinut
	ManufacturerTwoN
	ManufacturerTtlock
	ManufacturerNest
	ManufacturerIgloohome
	ManufacturerEcobee
	ManufacturerHubitat
)

func (m Manufacturer) String() string {
	switch m {
	default:
		return strconv.Itoa(int(m))
	case ManufacturerAkuvox:
		return "akuvox"
	case ManufacturerAugust:
		return "august"
	case ManufacturerBrivo:
		return "brivo"
	case ManufacturerButterflymx:
		return "butterflymx"
	case ManufacturerDoorking:
		return "doorking"
	case ManufacturerGenie:
		return "genie"
	case ManufacturerIgloo:
		return "igloo"
	case ManufacturerKeywe:
		return "keywe"
	case ManufacturerKwikset:
		return "kwikset"
	case ManufacturerLinear:
		return "linear"
	case ManufacturerLockly:
		return "lockly"
	case ManufacturerNuki:
		return "nuki"
	case ManufacturerPhilia:
		return "philia"
	case ManufacturerSalto:
		return "salto"
	case ManufacturerSamsung:
		return "samsung"
	case ManufacturerSchlage:
		return "schlage"
	case ManufacturerSeam:
		return "seam"
	case ManufacturerUnknown:
		return "unknown"
	case ManufacturerYale:
		return "yale"
	case ManufacturerMinut:
		return "minut"
	case ManufacturerTwoN:
		return "two_n"
	case ManufacturerTtlock:
		return "ttlock"
	case ManufacturerNest:
		return "nest"
	case ManufacturerIgloohome:
		return "igloohome"
	case ManufacturerEcobee:
		return "ecobee"
	case ManufacturerHubitat:
		return "hubitat"
	}
}

func (m Manufacturer) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", m.String())), nil
}

func (m *Manufacturer) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "akuvox":
		value := ManufacturerAkuvox
		*m = value
	case "august":
		value := ManufacturerAugust
		*m = value
	case "brivo":
		value := ManufacturerBrivo
		*m = value
	case "butterflymx":
		value := ManufacturerButterflymx
		*m = value
	case "doorking":
		value := ManufacturerDoorking
		*m = value
	case "genie":
		value := ManufacturerGenie
		*m = value
	case "igloo":
		value := ManufacturerIgloo
		*m = value
	case "keywe":
		value := ManufacturerKeywe
		*m = value
	case "kwikset":
		value := ManufacturerKwikset
		*m = value
	case "linear":
		value := ManufacturerLinear
		*m = value
	case "lockly":
		value := ManufacturerLockly
		*m = value
	case "nuki":
		value := ManufacturerNuki
		*m = value
	case "philia":
		value := ManufacturerPhilia
		*m = value
	case "salto":
		value := ManufacturerSalto
		*m = value
	case "samsung":
		value := ManufacturerSamsung
		*m = value
	case "schlage":
		value := ManufacturerSchlage
		*m = value
	case "seam":
		value := ManufacturerSeam
		*m = value
	case "unknown":
		value := ManufacturerUnknown
		*m = value
	case "yale":
		value := ManufacturerYale
		*m = value
	case "minut":
		value := ManufacturerMinut
		*m = value
	case "two_n":
		value := ManufacturerTwoN
		*m = value
	case "ttlock":
		value := ManufacturerTtlock
		*m = value
	case "nest":
		value := ManufacturerNest
		*m = value
	case "igloohome":
		value := ManufacturerIgloohome
		*m = value
	case "ecobee":
		value := ManufacturerEcobee
		*m = value
	case "hubitat":
		value := ManufacturerHubitat
		*m = value
	}
	return nil
}
