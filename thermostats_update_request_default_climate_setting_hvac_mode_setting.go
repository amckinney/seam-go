// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

type ThermostatsUpdateRequestDefaultClimateSettingHvacModeSetting uint8

const (
	ThermostatsUpdateRequestDefaultClimateSettingHvacModeSettingOff ThermostatsUpdateRequestDefaultClimateSettingHvacModeSetting = iota + 1
	ThermostatsUpdateRequestDefaultClimateSettingHvacModeSettingHeat
	ThermostatsUpdateRequestDefaultClimateSettingHvacModeSettingCool
	ThermostatsUpdateRequestDefaultClimateSettingHvacModeSettingHeatcool
)

func (t ThermostatsUpdateRequestDefaultClimateSettingHvacModeSetting) String() string {
	switch t {
	default:
		return strconv.Itoa(int(t))
	case ThermostatsUpdateRequestDefaultClimateSettingHvacModeSettingOff:
		return "off"
	case ThermostatsUpdateRequestDefaultClimateSettingHvacModeSettingHeat:
		return "heat"
	case ThermostatsUpdateRequestDefaultClimateSettingHvacModeSettingCool:
		return "cool"
	case ThermostatsUpdateRequestDefaultClimateSettingHvacModeSettingHeatcool:
		return "heatcool"
	}
}

func (t ThermostatsUpdateRequestDefaultClimateSettingHvacModeSetting) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", t.String())), nil
}

func (t *ThermostatsUpdateRequestDefaultClimateSettingHvacModeSetting) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "off":
		value := ThermostatsUpdateRequestDefaultClimateSettingHvacModeSettingOff
		*t = value
	case "heat":
		value := ThermostatsUpdateRequestDefaultClimateSettingHvacModeSettingHeat
		*t = value
	case "cool":
		value := ThermostatsUpdateRequestDefaultClimateSettingHvacModeSettingCool
		*t = value
	case "heatcool":
		value := ThermostatsUpdateRequestDefaultClimateSettingHvacModeSettingHeatcool
		*t = value
	}
	return nil
}
