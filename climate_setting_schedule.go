// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
)

type ClimateSettingSchedule struct {
	ClimateSettingScheduleId  string                                 `json:"climate_setting_schedule_id"`
	DeviceId                  string                                 `json:"device_id"`
	Name                      *string                                `json:"name,omitempty"`
	ScheduleStartsAt          string                                 `json:"schedule_starts_at"`
	ScheduleEndsAt            string                                 `json:"schedule_ends_at"`
	CreatedAt                 string                                 `json:"created_at"`
	AutomaticHeatingEnabled   *bool                                  `json:"automatic_heating_enabled,omitempty"`
	AutomaticCoolingEnabled   *bool                                  `json:"automatic_cooling_enabled,omitempty"`
	HvacModeSetting           *ClimateSettingScheduleHvacModeSetting `json:"hvac_mode_setting,omitempty"`
	CoolingSetPointCelsius    *float64                               `json:"cooling_set_point_celsius,omitempty"`
	HeatingSetPointCelsius    *float64                               `json:"heating_set_point_celsius,omitempty"`
	CoolingSetPointFahrenheit *float64                               `json:"cooling_set_point_fahrenheit,omitempty"`
	HeatingSetPointFahrenheit *float64                               `json:"heating_set_point_fahrenheit,omitempty"`
	ManualOverrideAllowed     *bool                                  `json:"manual_override_allowed,omitempty"`
	scheduleType              string
}

func (c *ClimateSettingSchedule) ScheduleType() string {
	return c.scheduleType
}

func (c *ClimateSettingSchedule) UnmarshalJSON(data []byte) error {
	type unmarshaler ClimateSettingSchedule
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = ClimateSettingSchedule(value)
	c.scheduleType = "time_bound"
	return nil
}

func (c *ClimateSettingSchedule) MarshalJSON() ([]byte, error) {
	type embed ClimateSettingSchedule
	var marshaler = struct {
		embed
		ScheduleType string `json:"schedule_type"`
	}{
		embed:        embed(*c),
		ScheduleType: "time_bound",
	}
	return json.Marshal(marshaler)
}
