// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

type DeviceType uint8

const (
	DeviceTypeAkuvoxLock DeviceType = iota + 1
	DeviceTypeAugustLock
	DeviceTypeBrivoAccessPoint
	DeviceTypeButterflymxPanel
	DeviceTypeDoorkingLock
	DeviceTypeGenieDoor
	DeviceTypeIglooLock
	DeviceTypeLinearLock
	DeviceTypeLocklyLock
	DeviceTypeKwiksetLock
	DeviceTypeNukiLock
	DeviceTypeSaltoLock
	DeviceTypeSchlageLock
	DeviceTypeSeamRelay
	DeviceTypeSmartthingsLock
	DeviceTypeYaleLock
	DeviceTypeTwoNIntercom
	DeviceTypeControlbywebDevice
	DeviceTypeTtlockLock
	DeviceTypeIgloohomeLock
	DeviceTypeHubitatLock
	DeviceTypeNoiseawareActivityZone
	DeviceTypeMinutSensor
	DeviceTypeEcobeeThermostat
	DeviceTypeNestThermostat
)

func (d DeviceType) String() string {
	switch d {
	default:
		return strconv.Itoa(int(d))
	case DeviceTypeAkuvoxLock:
		return "akuvox_lock"
	case DeviceTypeAugustLock:
		return "august_lock"
	case DeviceTypeBrivoAccessPoint:
		return "brivo_access_point"
	case DeviceTypeButterflymxPanel:
		return "butterflymx_panel"
	case DeviceTypeDoorkingLock:
		return "doorking_lock"
	case DeviceTypeGenieDoor:
		return "genie_door"
	case DeviceTypeIglooLock:
		return "igloo_lock"
	case DeviceTypeLinearLock:
		return "linear_lock"
	case DeviceTypeLocklyLock:
		return "lockly_lock"
	case DeviceTypeKwiksetLock:
		return "kwikset_lock"
	case DeviceTypeNukiLock:
		return "nuki_lock"
	case DeviceTypeSaltoLock:
		return "salto_lock"
	case DeviceTypeSchlageLock:
		return "schlage_lock"
	case DeviceTypeSeamRelay:
		return "seam_relay"
	case DeviceTypeSmartthingsLock:
		return "smartthings_lock"
	case DeviceTypeYaleLock:
		return "yale_lock"
	case DeviceTypeTwoNIntercom:
		return "two_n_intercom"
	case DeviceTypeControlbywebDevice:
		return "controlbyweb_device"
	case DeviceTypeTtlockLock:
		return "ttlock_lock"
	case DeviceTypeIgloohomeLock:
		return "igloohome_lock"
	case DeviceTypeHubitatLock:
		return "hubitat_lock"
	case DeviceTypeNoiseawareActivityZone:
		return "noiseaware_activity_zone"
	case DeviceTypeMinutSensor:
		return "minut_sensor"
	case DeviceTypeEcobeeThermostat:
		return "ecobee_thermostat"
	case DeviceTypeNestThermostat:
		return "nest_thermostat"
	}
}

func (d DeviceType) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", d.String())), nil
}

func (d *DeviceType) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "akuvox_lock":
		value := DeviceTypeAkuvoxLock
		*d = value
	case "august_lock":
		value := DeviceTypeAugustLock
		*d = value
	case "brivo_access_point":
		value := DeviceTypeBrivoAccessPoint
		*d = value
	case "butterflymx_panel":
		value := DeviceTypeButterflymxPanel
		*d = value
	case "doorking_lock":
		value := DeviceTypeDoorkingLock
		*d = value
	case "genie_door":
		value := DeviceTypeGenieDoor
		*d = value
	case "igloo_lock":
		value := DeviceTypeIglooLock
		*d = value
	case "linear_lock":
		value := DeviceTypeLinearLock
		*d = value
	case "lockly_lock":
		value := DeviceTypeLocklyLock
		*d = value
	case "kwikset_lock":
		value := DeviceTypeKwiksetLock
		*d = value
	case "nuki_lock":
		value := DeviceTypeNukiLock
		*d = value
	case "salto_lock":
		value := DeviceTypeSaltoLock
		*d = value
	case "schlage_lock":
		value := DeviceTypeSchlageLock
		*d = value
	case "seam_relay":
		value := DeviceTypeSeamRelay
		*d = value
	case "smartthings_lock":
		value := DeviceTypeSmartthingsLock
		*d = value
	case "yale_lock":
		value := DeviceTypeYaleLock
		*d = value
	case "two_n_intercom":
		value := DeviceTypeTwoNIntercom
		*d = value
	case "controlbyweb_device":
		value := DeviceTypeControlbywebDevice
		*d = value
	case "ttlock_lock":
		value := DeviceTypeTtlockLock
		*d = value
	case "igloohome_lock":
		value := DeviceTypeIgloohomeLock
		*d = value
	case "hubitat_lock":
		value := DeviceTypeHubitatLock
		*d = value
	case "noiseaware_activity_zone":
		value := DeviceTypeNoiseawareActivityZone
		*d = value
	case "minut_sensor":
		value := DeviceTypeMinutSensor
		*d = value
	case "ecobee_thermostat":
		value := DeviceTypeEcobeeThermostat
		*d = value
	case "nest_thermostat":
		value := DeviceTypeNestThermostat
		*d = value
	}
	return nil
}
